module interface std/test/bench
 
//------------------------------
//#kki: import declarations
 
import std/core/types = std/core/types pub = "";
import std/core/hnd = std/core/hnd pub = "";
import std/core/exn = std/core/exn pub = "";
import std/core/bool = std/core/bool pub = "";
import std/core/order = std/core/order pub = "";
import std/core/char = std/core/char pub = "";
import std/core/int = std/core/int pub = "";
import std/core/vector = std/core/vector pub = "";
import std/core/string = std/core/string pub = "";
import std/core/sslice = std/core/sslice pub = "";
import std/core/list = std/core/list pub = "";
import std/core/maybe = std/core/maybe pub = "";
import std/core/either = std/core/either pub = "";
import std/core/tuple = std/core/tuple pub = "";
import std/core/show = std/core/show pub = "";
import std/core/debug = std/core/debug pub = "";
import std/core/delayed = std/core/delayed pub = "";
import std/core/console = std/core/console pub = "";
import std/core = std/core = "";
import std/time/duration = std/time/duration = "";
import std/time/instant = std/time/instant = "";
import std/time/utc = std/time/utc = "";
import std/time/chrono = std/time/chrono = "";
import std/num/ddouble = std/num/ddouble = "";
 
//------------------------------
//#kki: external imports
 
 
//------------------------------
//#kki: fixity declarations
 
 
//------------------------------
//#kki: local imported aliases
 
 
//------------------------------
//#kki: type declarations
 
 
//------------------------------
//#kki: declarations
 
// monadic lift
 fun @mlift-time@10019[1,0,1,0] : forall<a,(e :: E)> (res : a, start : std/time/instant/instant, end : std/time/instant/instant) -> <(std/core/types/ndet :: X),(std/core/types/handled :: ((E, V) -> V) -> X)<(std/time/utc/utc :: (E, V) -> V)>|(e :: E)> a;
// monadic lift
 fun @mlift-time@10020[1,0,1,0] : forall<a,(e :: E)> (start : std/time/instant/instant, res : a) -> <(std/core/types/ndet :: X),(std/core/types/handled :: ((E, V) -> V) -> X)<(std/time/utc/utc :: (E, V) -> V)>|(e :: E)> a;
// monadic lift
 fun @mlift-time@10021[1,0,1,0] : forall<a,(e :: E)> (f : () -> <(std/core/types/ndet :: X),(std/core/types/handled :: ((E, V) -> V) -> X)<(std/time/utc/utc :: (E, V) -> V)>|(e :: E)> a, start : std/time/instant/instant) -> <(std/core/types/ndet :: X),(std/core/types/handled :: ((E, V) -> V) -> X)<(std/time/utc/utc :: (E, V) -> V)>|(e :: E)> a;
pub  fun time[7,9,7,12] : forall<a,(e :: E)> (f : () -> <(std/core/types/ndet :: X),(std/core/types/handled :: ((E, V) -> V) -> X)<(std/time/utc/utc :: (E, V) -> V)>|(e :: E)> a) -> <(std/core/types/ndet :: X),(std/core/types/handled :: ((E, V) -> V) -> X)<(std/time/utc/utc :: (E, V) -> V)>|(e :: E)> a;
 
//------------------------------
//#kki: external declarations
 
 
//------------------------------
//#kki: inline definitions
 